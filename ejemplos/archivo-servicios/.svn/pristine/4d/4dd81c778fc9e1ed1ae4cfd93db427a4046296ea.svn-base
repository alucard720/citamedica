package dr.gob.hacienda.servicios.cliente;

import static org.junit.Assert.assertNotNull;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import org.junit.Ignore;
import org.junit.Test;

import dr.gob.hacienda.servicios.modelo.Archivo;
import dr.gob.hacienda.servicios.modelo.ArchivoBusqueda;

public class ArchivoClienteTest {

	@Test
	@Ignore
	public void testArchivoBusquedaObjeto() {
		ArchivoBusquedaCliente cliente = new ArchivoBusquedaCliente();
		
		List<String> valoresBusqueda = new ArrayList<String>();
		valoresBusqueda.add("Archivo1");
		valoresBusqueda.add("Archivo2");
		
		ArchivoBusqueda buscar = new ArchivoBusqueda();
		buscar.setDescripciones(valoresBusqueda);
		buscar.setFechaDesde(new Date());
		buscar.setFechaDesde(new Date()); //Sumar n dias a la segunda fecha para crear un rango
		
		List<Archivo> archivos = cliente.buscar(buscar);
		
		assertNotNull(archivos);
	}
	
	@Test
	@Ignore
	public void testArchivoBusqueda() {
		ArchivoBusquedaCliente cliente = new ArchivoBusquedaCliente();
		
		String parametro= "descripcion";
		List<String> parametros = new ArrayList<String>();
		parametros.add("Archivo1");
		parametros.add("Archivo2");
		
		List<Archivo> archivos = cliente.buscar(parametro, parametros);
		
		assertNotNull(archivos);
	}
	
	@Test
	@Ignore
	public void testArchivoBorrar() {
		ArchivoCliente cliente = new ArchivoCliente();
		cliente.borrar("1234");
	}

	@Test
	@Ignore
	public void testArchivoPut() {
		ArchivoCliente cliente = new ArchivoCliente();

		Archivo archivo = new Archivo();
		
		archivo.setArchivoId(3456);
		archivo.setAplicacion("SIGEF");
		archivo.setNombre("Archivo3456.pdf");
		archivo.setDescripcion("Archivo creado desde unidad de prueba usando PUT");

		archivo = cliente.actualizar(archivo);

		assertNotNull(archivo);
	}

	@Test
	@Ignore
	public void testCreateArchivo() {
		ArchivoCliente cliente = new ArchivoCliente();

		Archivo archivo = new Archivo();

		archivo.setAplicacion("SIGEF");
		archivo.setNombre("Archivo99.pdf");
		archivo.setDescripcion("Archivo creado desde unidad de prueba");

		archivo = cliente.crear(archivo);

		assertNotNull(archivo);
	}

	@Test
	@Ignore
	public void testGetArchivo() {
		ArchivoCliente cliente = new ArchivoCliente();
		Archivo archivo = cliente.get("1234");
		assertNotNull(archivo);
	}

	@Test
	@Ignore
	public void testGetListaArchivos() {
		ArchivoCliente cliente = new ArchivoCliente();
		List<Archivo> archivos = cliente.get();
		assertNotNull(archivos);
	}

	@Test(expected = RuntimeException.class)
	@Ignore
	public void testGetNoExiste() {
		ArchivoCliente cliente = new ArchivoCliente();
		cliente.get("777");
	}
}